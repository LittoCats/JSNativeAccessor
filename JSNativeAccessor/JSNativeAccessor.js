// Generated by CoffeeScript 1.10.0
(function() {
  var Bool, BuildIn, Char, Double, Float, Int, Int16, Int32, Int64, Int8, LDouble, LLong, Long, MethodSignature, Numeric, Pointer, Ptrdiff, SSize, Short, UChar, UInt, UInt16, UInt32, UInt64, UInt8, ULLong, ULong, UShort, USize, UWChar, Unsigned, Void, WChar,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Object.defineProperty(JNA, 'Buffer', {
    value: Buffer
  });

  Buffer.prototype.equals = function(other) {
    return 0 === this.compare(other);
  };

  BuildIn = (function() {
    function BuildIn() {
      this.__buildin__ = new Buffer(this.constructor.SIZE);
    }

    return BuildIn;

  })();

  Object.defineProperty(BuildIn, 'heritable', {
    value: function(T) {
      if (this === T) {
        return true;
      }
      return !!this.__super__ && !!this.__super__.constructor && this.__super__.constructor.heritable(T);
    }
  });

  Numeric = (function(superClass) {
    extend(Numeric, superClass);

    function Numeric(num) {
      Numeric.__super__.constructor.apply(this, arguments);
      this.number = num;
    }

    Object.defineProperty(Numeric.prototype, 'number', {
      get: function() {
        return this.__buildin__["read" + this.constructor.name]();
      },
      set: function(newVal) {
        return this.__buildin__["write" + this.constructor.name](newVal);
      }
    });

    Numeric.prototype.toString = Numeric.prototype.toJSON = function() {
      return this.number;
    };

    return Numeric;

  })(BuildIn);

  BuildIn.Void = Void = (function(superClass) {
    extend(Void, superClass);

    function Void() {
      return Void.__super__.constructor.apply(this, arguments);
    }

    return Void;

  })(BuildIn);

  BuildIn.Pointer = Pointer = (function(superClass) {
    extend(Pointer, superClass);

    function Pointer() {
      return Pointer.__super__.constructor.apply(this, arguments);
    }

    return Pointer;

  })(BuildIn);

  BuildIn.UInt8 = UInt8 = (function(superClass) {
    extend(UInt8, superClass);

    function UInt8() {
      return UInt8.__super__.constructor.apply(this, arguments);
    }

    return UInt8;

  })(Numeric);

  BuildIn.Int8 = Int8 = (function(superClass) {
    extend(Int8, superClass);

    function Int8() {
      return Int8.__super__.constructor.apply(this, arguments);
    }

    return Int8;

  })(Numeric);

  BuildIn.UInt16 = UInt16 = (function(superClass) {
    extend(UInt16, superClass);

    function UInt16() {
      return UInt16.__super__.constructor.apply(this, arguments);
    }

    return UInt16;

  })(Numeric);

  BuildIn.Int16 = Int16 = (function(superClass) {
    extend(Int16, superClass);

    function Int16() {
      return Int16.__super__.constructor.apply(this, arguments);
    }

    return Int16;

  })(Numeric);

  BuildIn.UInt32 = UInt32 = (function(superClass) {
    extend(UInt32, superClass);

    function UInt32() {
      return UInt32.__super__.constructor.apply(this, arguments);
    }

    return UInt32;

  })(Numeric);

  BuildIn.Int32 = Int32 = (function(superClass) {
    extend(Int32, superClass);

    function Int32() {
      return Int32.__super__.constructor.apply(this, arguments);
    }

    return Int32;

  })(Numeric);

  BuildIn.UInt64 = UInt64 = (function(superClass) {
    extend(UInt64, superClass);

    function UInt64() {
      return UInt64.__super__.constructor.apply(this, arguments);
    }

    return UInt64;

  })(Numeric);

  BuildIn.Int64 = Int64 = (function(superClass) {
    extend(Int64, superClass);

    function Int64() {
      return Int64.__super__.constructor.apply(this, arguments);
    }

    return Int64;

  })(Numeric);

  BuildIn.UWChar = UWChar = (function(superClass) {
    extend(UWChar, superClass);

    function UWChar() {
      return UWChar.__super__.constructor.apply(this, arguments);
    }

    return UWChar;

  })(Numeric);

  BuildIn.WChar = WChar = (function(superClass) {
    extend(WChar, superClass);

    function WChar() {
      return WChar.__super__.constructor.apply(this, arguments);
    }

    return WChar;

  })(Numeric);

  BuildIn.UChar = UChar = (function(superClass) {
    extend(UChar, superClass);

    function UChar() {
      return UChar.__super__.constructor.apply(this, arguments);
    }

    return UChar;

  })(Numeric);

  BuildIn.Char = Char = (function(superClass) {
    extend(Char, superClass);

    function Char() {
      return Char.__super__.constructor.apply(this, arguments);
    }

    return Char;

  })(Numeric);

  BuildIn.UShort = UShort = (function(superClass) {
    extend(UShort, superClass);

    function UShort() {
      return UShort.__super__.constructor.apply(this, arguments);
    }

    return UShort;

  })(Numeric);

  BuildIn.Short = Short = (function(superClass) {
    extend(Short, superClass);

    function Short() {
      return Short.__super__.constructor.apply(this, arguments);
    }

    return Short;

  })(Numeric);

  BuildIn.ULong = ULong = (function(superClass) {
    extend(ULong, superClass);

    function ULong() {
      return ULong.__super__.constructor.apply(this, arguments);
    }

    return ULong;

  })(Numeric);

  BuildIn.Long = Long = (function(superClass) {
    extend(Long, superClass);

    function Long() {
      return Long.__super__.constructor.apply(this, arguments);
    }

    return Long;

  })(Numeric);

  BuildIn.ULLong = ULLong = (function(superClass) {
    extend(ULLong, superClass);

    function ULLong() {
      return ULLong.__super__.constructor.apply(this, arguments);
    }

    return ULLong;

  })(Numeric);

  BuildIn.LLong = LLong = (function(superClass) {
    extend(LLong, superClass);

    function LLong() {
      return LLong.__super__.constructor.apply(this, arguments);
    }

    return LLong;

  })(Numeric);

  BuildIn.UInt = UInt = (function(superClass) {
    extend(UInt, superClass);

    function UInt() {
      return UInt.__super__.constructor.apply(this, arguments);
    }

    return UInt;

  })(Numeric);

  BuildIn.Int = Int = (function(superClass) {
    extend(Int, superClass);

    function Int() {
      return Int.__super__.constructor.apply(this, arguments);
    }

    return Int;

  })(Numeric);

  BuildIn.Unsigned = Unsigned = (function(superClass) {
    extend(Unsigned, superClass);

    function Unsigned() {
      return Unsigned.__super__.constructor.apply(this, arguments);
    }

    return Unsigned;

  })(Numeric);

  BuildIn.USize = USize = (function(superClass) {
    extend(USize, superClass);

    function USize() {
      return USize.__super__.constructor.apply(this, arguments);
    }

    return USize;

  })(Numeric);

  BuildIn.SSize = SSize = (function(superClass) {
    extend(SSize, superClass);

    function SSize() {
      return SSize.__super__.constructor.apply(this, arguments);
    }

    return SSize;

  })(Numeric);

  BuildIn.Ptrdiff = Ptrdiff = (function(superClass) {
    extend(Ptrdiff, superClass);

    function Ptrdiff() {
      return Ptrdiff.__super__.constructor.apply(this, arguments);
    }

    return Ptrdiff;

  })(Numeric);

  BuildIn.Bool = Bool = (function(superClass) {
    extend(Bool, superClass);

    function Bool() {
      return Bool.__super__.constructor.apply(this, arguments);
    }

    return Bool;

  })(Numeric);

  BuildIn.Float = Float = (function(superClass) {
    extend(Float, superClass);

    function Float() {
      return Float.__super__.constructor.apply(this, arguments);
    }

    return Float;

  })(Numeric);

  BuildIn.Double = Double = (function(superClass) {
    extend(Double, superClass);

    function Double() {
      return Double.__super__.constructor.apply(this, arguments);
    }

    return Double;

  })(Numeric);

  BuildIn.LDouble = LDouble = (function(superClass) {
    extend(LDouble, superClass);

    function LDouble() {
      return LDouble.__super__.constructor.apply(this, arguments);
    }

    return LDouble;

  })(Numeric);

  (function(buffer) {
    var N, STT, T, UTT, __buildin__, results;
    UTT = [0, FFI.TYPE_BUILDIN.UInt8, FFI.TYPE_BUILDIN.UInt16, 0, FFI.TYPE_BUILDIN.UInt32, 0, 0, 0, FFI.TYPE_BUILDIN.UInt64];
    STT = [0, FFI.TYPE_BUILDIN.Int8, FFI.TYPE_BUILDIN.Int16, 0, FFI.TYPE_BUILDIN.Int32, 0, 0, 0, FFI.TYPE_BUILDIN.Int64];
    results = [];
    for (N in BuildIn) {
      T = BuildIn[N];
      __buildin__ = FFI.TYPE_BUILDIN[N];
      if (__buildin__ === void 0) {
        __buildin__ = [STT, UTT][T.name[0] === 'U' ? 1 : 0][buffer["write" + T.name]()];
      }
      Object.defineProperty(T, '__buildin__', {
        value: __buildin__
      });
      Object.defineProperty(T, 'SIZE', {
        get: function() {
          return this.__buildin__.readInt(FFI.TYPE_SIZE_OFFSET);
        }
      });
      Object.defineProperty(T, 'ALIGMENT', {
        get: function() {
          return this.__buildin__.readInt(FFI.TYPE_SIZE_OFFSET);
        }
      });
      Object.defineProperty(T, 'TYPE', {
        get: function() {
          return this.__buildin__.readInt(FFI.TYPE_SIZE_OFFSET);
        }
      });
      Object.defineProperty(T, 'FIELDS', {
        get: function() {
          return this.__buildin__.readInt(FFI.TYPE_SIZE_OFFSET);
        }
      });
      results.push(console.log(T.name + ": " + T.TYPE));
    }
    return results;
  })(new Buffer(16));

  Bool.prototype.toString = Bool.prototype.toJSON = function() {
    return !!this.number;
  };

  MethodSignature = (function() {
    function MethodSignature(rtypes, atypes) {}

    return MethodSignature;

  })();

  MethodSignature.prototype.execute = function() {};

}).call(this);
